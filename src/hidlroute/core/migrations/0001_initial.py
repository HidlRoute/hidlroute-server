# Generated by Django 4.0.4 on 2022-05-13 18:18

import cidrfield.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import hidlroute.core.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DNS', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', cidrfield.models.IPNetworkField(validators=[hidlroute.core.models.should_be_single_IP])),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.group')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.group')),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interface_name', models.CharField(max_length=16)),
                ('name', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='ServerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.group')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.server')),
            ],
        ),
        migrations.CreateModel(
            name='ServerMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.member')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.server')),
                ('server_group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.servergroup')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ServerRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
                ('server_group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.servergroup')),
                ('server_member', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.servermember')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('servermember_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hidl_core.servermember')),
                ('host_name', models.CharField(max_length=1024)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('hidl_core.servermember',),
        ),
        migrations.CreateModel(
            name='ServerFirewallRule',
            fields=[
                ('serverrule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hidl_core.serverrule')),
                ('action', models.CharField(max_length=16)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('hidl_core.serverrule',),
        ),
        migrations.CreateModel(
            name='ServerRoutingRule',
            fields=[
                ('serverrule_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hidl_core.serverrule')),
                ('network', cidrfield.models.IPNetworkField()),
                ('gateway', cidrfield.models.IPNetworkField()),
                ('interface', models.CharField(max_length=16)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('hidl_core.serverrule',),
        ),
        migrations.CreateModel(
            name='WireguardServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_key', models.CharField(max_length=1024)),
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.server')),
            ],
        ),
        migrations.CreateModel(
            name='WireguardPeer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_key', models.CharField(max_length=1024)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.device')),
            ],
        ),
        migrations.CreateModel(
            name='Subnet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('cidr', cidrfield.models.IPNetworkField()),
                ('server_group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.servergroup')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='servers',
            field=models.ManyToManyField(through='hidl_core.ServerMember', to='hidl_core.server'),
        ),
        migrations.AddField(
            model_name='group',
            name='servers',
            field=models.ManyToManyField(through='hidl_core.ServerGroup', to='hidl_core.server'),
        ),
        migrations.AddField(
            model_name='device',
            name='server_member',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to='hidl_core.servermember'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_picture', models.URLField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('servermember_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hidl_core.servermember')),
                ('name', models.CharField(max_length=1024)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('hidl_core.servermember',),
        ),
    ]
