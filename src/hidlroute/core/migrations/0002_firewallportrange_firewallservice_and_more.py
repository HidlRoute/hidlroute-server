# Generated by Django 4.0.4 on 2022-05-20 18:55

#    Hidl Route - opensource vpn management system
#    Copyright (C) 2023 Dmitry Berezovsky, Alexander Cherednichenko
#
#    Hidl Route is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Hidl Route is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

import autoslug.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("hidl_core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="FirewallPortRange",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("protocol", models.CharField(blank=True, max_length=20, null=True)),
                ("start", models.PositiveIntegerField()),
                ("end", models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="FirewallService",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        blank=True, editable=True, max_length=150, populate_from="name", unique=True
                    ),
                ),
                ("name", models.CharField(max_length=1024)),
                ("comment", models.TextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="serverfirewallrule",
            name="network_from",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="network_from",
                to="hidl_core.subnet",
            ),
        ),
        migrations.AddField(
            model_name="serverfirewallrule",
            name="network_from_override",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name="serverfirewallrule",
            name="network_to",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                related_name="network_to",
                to="hidl_core.subnet",
            ),
        ),
        migrations.AddField(
            model_name="serverfirewallrule",
            name="network_to_override",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name="serverfirewallrule",
            name="action",
            field=models.CharField(max_length=20),
        ),
        migrations.AlterField(
            model_name="serverroutingrule",
            name="interface",
            field=models.CharField(
                blank=True,
                help_text="Use special keyword $self to reference interface of the VPN server this route is attached to",
                max_length=16,
                null=True,
            ),
        ),
        migrations.AddConstraint(
            model_name="serverfirewallrule",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("server__isnull", True), ("server_group__isnull", False), ("server_member__isnull", True)
                    ),
                    models.Q(
                        ("server__isnull", True), ("server_group__isnull", True), ("server_member__isnull", False)
                    ),
                    models.Q(
                        ("server__isnull", False), ("server_group__isnull", True), ("server_member__isnull", True)
                    ),
                    _connector="OR",
                ),
                name="check_hidl_core_serverfirewallrule_member_xor_group_xor_server",
            ),
        ),
        migrations.AddConstraint(
            model_name="serverfirewallrule",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("network_from__isnull", False), ("network_from_override__isnull", False), _negated=True
                ),
                name="check_firewallrule_network_from_xor_override",
            ),
        ),
        migrations.AddConstraint(
            model_name="serverfirewallrule",
            constraint=models.CheckConstraint(
                check=models.Q(("network_to__isnull", False), ("network_to_override__isnull", False), _negated=True),
                name="check_firewallrule_network_to_xor_override",
            ),
        ),
        migrations.AddField(
            model_name="firewallportrange",
            name="service",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="hidl_core.firewallservice"),
        ),
        migrations.AddField(
            model_name="serverfirewallrule",
            name="service",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to="hidl_core.firewallservice"
            ),
        ),
    ]
